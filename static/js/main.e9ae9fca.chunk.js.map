{"version":3,"sources":["components/Todolist/Todolist.js","components/Todoadd/Todoadd.js","App.js","index.js"],"names":["Todolist","createTasks","item","ListGroup","Item","key","text","entries","this","props","Card","Header","Body","map","Component","Todoadd","handleInput","e","preventDefault","taskName","taskInput","current","value","addItem","focus","React","createRef","Form","onSubmit","InputGroup","size","className","FormControl","aria-label","aria-describedby","placeholder","ref","Button","variant","type","App","newTask","Date","now","setState","state","items","Container","Row","Col","sm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iVAyBeA,E,4MArBXC,YAAc,SAAAC,GACV,OACI,kBAACC,EAAA,EAAUC,KAAX,CAAgBC,IAAKH,EAAKG,KAAMH,EAAKI,O,uDAGnC,IACCC,EAAWC,KAAKC,MAAhBF,QACP,OACI,kBAACG,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,OAAN,kBACA,kBAACD,EAAA,EAAKE,KAAN,KACI,kBAACT,EAAA,EAAD,KACKI,EAAQM,IAAIL,KAAKP,oB,GAbnBa,a,gCCwCRC,E,kDArCX,WAAYN,GAAQ,IAAD,8BACf,cAAMA,IAIVO,YAAc,SAAAC,GACVA,EAAEC,iBAOF,IAAMC,EAAW,EAAKC,UAAUC,QAAQC,MAExC,EAAKb,MAAMc,QAAQJ,GAEnB,EAAKC,UAAUC,QAAQC,MAAM,GAC7B,EAAKF,UAAUC,QAAQG,SAhBvB,EAAKJ,UAAYK,IAAMC,YAFR,E,qDAqBf,OACI,6BACI,kBAACC,EAAA,EAAD,CAAMC,SAAUpB,KAAKQ,aACjB,kBAACa,EAAA,EAAD,CAAYC,KAAK,KAAKC,UAAU,QAC5B,kBAACC,EAAA,EAAD,CAAaC,aAAW,QAAQC,mBAAiB,uBAAuBC,YAAY,OAChFC,IAAK5B,KAAKY,YACd,kBAACiB,EAAA,EAAD,CAAQC,QAAQ,UAAUC,KAAK,UAA/B,c,GA5BFd,IAAMX,WCwCb0B,E,kDArCb,aAAe,IAAD,8BACZ,gBAKFjB,QAAU,SAACJ,GACT,IAAMsB,EAAU,CACdnC,KAAMa,EACNd,IAAKqC,KAAKC,OAEI,OAAbxB,GAAiC,KAAZA,GAGtB,EAAKyB,UAAS,SAAAC,GACZ,MAAO,CACHC,MAAM,GAAD,mBAAMD,EAAMC,OAAZ,CAAmBL,SAdhC,EAAKI,MAAO,CACVC,MAAO,IAHG,E,qDAsBZ,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,CAAS3B,QAAWf,KAAKe,UACzB,kBAAC,EAAD,CAAUhB,QAASC,KAAKqC,MAAMC,e,GA5BxBhC,a,MCAlBqC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.e9ae9fca.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\nclass Todolist extends Component {\r\n    createTasks = item => {\r\n        return (\r\n            <ListGroup.Item key={item.key}>{item.text}</ListGroup.Item>\r\n        )\r\n    }\r\n    render() {\r\n        const {entries} = this.props;\r\n        return (\r\n            <Card>\r\n                <Card.Header>Todo List</Card.Header>\r\n                <Card.Body>\r\n                    <ListGroup>\r\n                        {entries.map(this.createTasks)}\r\n                    </ListGroup>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default Todolist;","import React from 'react';\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Form from 'react-bootstrap/Form'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Button from 'react-bootstrap/Button'\r\nclass Todoadd extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.taskInput = React.createRef();\r\n    }\r\n    \r\n    handleInput = e => {\r\n        e.preventDefault()\r\n        // const taskName = this.refs.taskInput.value;\r\n        // this.props.addItem(taskName);\r\n        // // reset and focus again on input form\r\n        // this.refs.taskInput.value = ''\r\n        // this.refs.taskInput.focus()\r\n       \r\n        const taskName = this.taskInput.current.value;\r\n       // console.log(taskName);\r\n        this.props.addItem(taskName);\r\n        //reset and focus again on input form\r\n        this.taskInput.current.value='';\r\n        this.taskInput.current.focus();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.handleInput}>\r\n                    <InputGroup size=\"sm\" className=\"mb-3\">\r\n                        <FormControl aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" placeholder=\"Task\"\r\n                            ref={this.taskInput} />\r\n                        <Button variant=\"primary\" type=\"submit\">\r\n                            Add\r\n                        </Button>\r\n                    </InputGroup>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Todoadd;","import React, { Component } from 'react';\nimport './App.css';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Todolist from './components/Todolist/Todolist';\nimport Todoadd from './components/Todoadd/Todoadd';\nclass App extends Component {\n  constructor() {\n    super();\n    this.state ={\n      items: []\n    }\n  }\n  addItem = (taskName) => { //truyen  call back addItem vao component Todoadd\n    const newTask = {\n      text: taskName,\n      key: Date.now()\n    }\n    if(taskName !== null && taskName !==''){\n      // const items = [...this.state.items, newTask]\n      // this.setState({items: items}) // or {items,}\n      this.setState(state =>  {\n        return {\n            items: [...state.items, newTask]\n        }\n      })\n    }\n  }\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col sm={5}>\n            <Todoadd addItem = {this.addItem}/>\n            <Todolist entries={this.state.items}/>\n            \n          </Col>\n        </Row>\n      </Container>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}